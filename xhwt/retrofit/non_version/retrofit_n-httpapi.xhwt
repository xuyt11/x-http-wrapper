<t:header>
{
    "file_name":"HttpApi.java",
    "file_dirs":[
        {
            "os_name":"Windows",
            "path":"I:/ytxuEIM/EIM4Android/app/src/main/java/cn/ytxu/http/"
        },
        {
            "os_name":"Mac OS X",
            "path":"/Users/newchama/Documents/ytxu/VolleyWrapper/app/src/main/java/ytxu/cn/volley/api/"
        }
    ]
}
</t:header>
package cn.ytxu.http;

import cn.ytxu.http.api.*;
import cn.ytxu.http.api.retrofit.*;
import cn.ytxu.http.config.RetrofitConfig;

<t:retain type="import"/>

public class HttpApi {

<t:retain type="field"/>

    //**************** base common ****************
    private static final class CommonApiWrapperHelper {
        private static final CommonApi instance = RetrofitConfig.instance().createService(CommonApi.class);
        private static final CommonApiWrapper winstance = new CommonApiWrapper();
    }

    static CommonApi commonApi() {
        return CommonApiWrapperHelper.instance;
    }

    public static CommonApiWrapper commonApiWrapper() {
        return CommonApiWrapperHelper.winstance;
    }

    private static final class RetrofitSampleHelper {
        private static final RetrofitSample instance = RetrofitConfig.instance().createService(RetrofitSample.class);
        private static final RetrofitSampleWrapper winstance = new RetrofitSampleWrapper();
    }

    public static RetrofitSample retrofitSample() {
        return RetrofitSampleHelper.instance;
    }

    public static RetrofitSampleWrapper retrofitSampleWrapper() {
        return RetrofitSampleHelper.winstance;
    }


    //**************** foreach request group ****************
<t:foreach each="request_groups">
    private static final class ${request_group_class_name}Helper {
        private static final ${request_group_class_name} instance = RetrofitConfig.instance().createService(${request_group_class_name}.class);
        private static final ${request_group_class_name}Wrapper winstance = new ${request_group_class_name}Wrapper();
    }

    public static ${request_group_class_name} ${request_group_name}() {
        return ${request_group_class_name}Helper.instance;
    }

    public static ${request_group_class_name}Wrapper ${request_group_name}Wrapper() {
        return ${request_group_class_name}Helper.winstance;
    }

</t:foreach>

<t:retain type="method"/>

<t:retain type="other"/>

}