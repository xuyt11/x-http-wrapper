<t:header>
{
    "file_name":"${request_group_class_name}Wrapper.java",
    "file_dirs":[
        {
            "os_name":"Windows",
            "path":"I:/ytxuEIM/EIM4Android/app/src/main/java/cn/ytxu/http/api/"
        },
        {
            "os_name":"Mac OS X",
            "path":"/Users/newchama/Documents/ytxu/VolleyWrapper/app/src/main/java/ytxu/cn/volley/api/api"
        }
    ]
}
</t:header>
package cn.ytxu.http.api;

import java.io.File;

import cn.ytxu.http.BaseApi;
import cn.ytxu.http.api.retrofit.*;
import cn.ytxu.http.config.RetrofitConfig;
import cn.ytxu.http.entity.HttpEntity;
import cn.ytxu.http.entity.${request_group_newchama}.*;
import cn.ytxu.http.request_param.${request_group_newchama}.*;
import rx.Observable;
import rx.Subscriber;
import rx.Subscription;
import rx.android.schedulers.AndroidSchedulers;
import rx.schedulers.Schedulers;

<t:retain type="import"/>

public class ${request_group_class_name}Wrapper extends BaseApi {

    private final ${request_group_class_name} inner = RetrofitConfig.instance().createService(${request_group_class_name}.class);

<t:retain type="field"/>

<t:foreach each="requests">
    /**
	 * @version ${request_version}
	 * @method ${request_METHOD}
	 * @requestUrl ${request_url}
	 <t:if isNotEmpty="request_title">
	 * @title ${request_title}
	 </t:if_end>
	 <t:if isNotEmpty="request_desc">
	 * @desc ${request_desc}
	 </t:if_end>
	 *
	 <t:foreach each="headers">
	 * @header ${header_name} ${header_desc}
	 </t:foreach>
	 <t:foreach each="inputs">
	 <t:if isTrue="input_isOptional">
	 * @param ${input_name} isOptional ${field_read_type} ${input_desc}
	 <t:else>
	 * @param ${input_name} ${field_read_type} ${input_desc}
	 </t:if_end>
	 </t:foreach>
	 */
    <t:list_attach each="inputs" attach="attach_inputs">
        <t:list_attach text_start=""/>
        <t:list_attach list_temp="${input_request_param_type} ${input_name}, "/>
        <t:list_attach text_end=""/>
    </t:list_attach>
    <t:list_attach each="filtered_headers" attach="attach_headers">
        <t:list_attach text_start=""/>
        <t:list_attach list_temp="String ${header_name}, "/>
        <t:list_attach text_end=""/>
    </t:list_attach>
    <t:list_attach each="url_dynamic_path" attach="url_paths">
        <t:list_attach text_start=""/>
        <t:list_attach list_temp="String ${url_path_dynamic_param}, "/>
        <t:list_attach text_end=""/>
    </t:list_attach>
	public Observable<HttpEntity<${request_class_name}>> ${request_name}(${url_paths}${attach_headers}${attach_inputs}) {
        <t:list_attach each="inputs" attach="attach_inputs">
            <t:list_attach text_start=""/>
            <t:list_attach list_temp="${input_name}, "/>
            <t:list_attach text_end=""/>
        </t:list_attach>
        <t:list_attach each="filtered_headers" attach="attach_headers">
            <t:list_attach text_start=""/>
            <t:list_attach list_temp="${header_name}, "/>
            <t:list_attach text_end=""/>
        </t:list_attach>
        <t:list_attach each="url_dynamic_path" attach="url_paths">
            <t:list_attach text_start=""/>
            <t:list_attach list_temp="${url_path_dynamic_param}, "/>
            <t:list_attach text_end=""/>
        </t:list_attach>
        return inner.${request_name}(${url_paths}${attach_headers}${attach_inputs})
                .subscribeOn(Schedulers.io()).unsubscribeOn(Schedulers.io()).observeOn(AndroidSchedulers.mainThread());
	}

    <t:if isTrue="needGenerateOptionalRequestMethod">
        <t:list_attach each="input_groups" attach="attach_input_groups">
            <t:list_attach text_start=""/>
            <t:list_attach list_temp="${request_param_class_name}.${input_group_class_name} ${input_group_name}, "/>
            <t:list_attach text_end=""/>
        </t:list_attach>
        <t:list_attach each="filtered_headers" attach="attach_headers">
            <t:list_attach text_start=""/>
            <t:list_attach list_temp="String ${header_name}, "/>
            <t:list_attach text_end=""/>
        </t:list_attach>
        <t:list_attach each="url_dynamic_path" attach="url_paths">
            <t:list_attach text_start=""/>
            <t:list_attach list_temp="String ${url_path_dynamic_param}, "/>
            <t:list_attach text_end=""/>
        </t:list_attach>
	public Observable<HttpEntity<${request_class_name}>> ${request_name}(${url_paths}${attach_headers}${attach_input_groups}) {
        <t:list_attach each="input_groups_fileds" attach="attach_input_group_fields">
            <t:list_attach text_start=""/>
            <t:list_attach list_temp="${input_group_name}.${input_name}, "/>
            <t:list_attach text_end=""/>
        </t:list_attach>
        <t:list_attach each="filtered_headers" attach="attach_headers">
            <t:list_attach text_start=""/>
            <t:list_attach list_temp="${header_name}, "/>
            <t:list_attach text_end=""/>
        </t:list_attach>
        <t:list_attach each="url_dynamic_path" attach="url_paths">
            <t:list_attach text_start=""/>
            <t:list_attach list_temp="${url_path_dynamic_param}, "/>
            <t:list_attach text_end=""/>
        </t:list_attach>
        return ${request_name}(${url_paths}${attach_headers}${attach_input_group_fields});
    }

    </t:if_end>
</t:foreach>

<t:retain type="method"/>

<t:retain type="other"/>

}