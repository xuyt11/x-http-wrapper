<t:header>
{
    "fileName":"${request_group_class_name}.swift",
    "fileDirs":[
        {
            "osName":"Windows",
            "path":"I:/NewChamaStudio/newchama_android/NewChama/newchama.common/src/main/java/com/newchama_ios/api/"
        },
        {
            "osName":"Mac OS X",
            "path":"/Users/newchama/Documents/ytxu/ios_workspace/alamofire/alamofire/"
        }
    ]
}
</t:header>
import Foundation
import UIKit
import Alamofire
import ObjectMapper
import SwiftyJSON

<t:retain type="import"/>

class ${request_group_class_name}: HttpClient {

<t:retain type="field"/>

<t:foreach each="requests">
	/**
	 * @version ${request_version}
	 * @requestUrl ${request_url}
	 <t:if isNotEmpty="request_title">
	 * @title ${request_title}
	 </t:if_end>
	 <t:if isNotEmpty="request_desc">
	 * @desc ${request_desc}
	 </t:if_end>
	 *
	 <t:foreach each="headers">
	 * @param ${header_name} ${header_desc}
	 </t:foreach>
	 <t:foreach each="inputs">
	 <t:if isTrue="input_isOptional">
	 * @param ${input_name} isOptional ${field_read_type} ${input_desc}
	 <t:else>
	 * @param ${input_name} ${field_read_type} ${input_desc}
	 </t:if_end>
	 </t:foreach>
	 */
	 <t:list_attach each="RESTful_fields" attach="restful_name_list">
         <t:list_attach list_temp="${RESTful_field_name}: String, "/>
     </t:list_attach>
    static func ${request_name}(${restful_name_list}para: Dic, success: SuccessedClosure, error: ErrorClosure, failure: FailedClosure) -> Request {
        <t:if isTrue="request_url_is_RESTful">
        <t:list_replace each="RESTful_fields" replace_key="restful_name_list" list_value=", ${RESTful_field_name}">
		let url = String.init(format: "${request_convert_url}"${restful_name_list})
		</t:list_replace>
        <t:else>
        let url = "${request_convert_url}"
        </t:if_end>
        return HttpClient.request(type: .${request_METHOD}, urlStr: url, params: para, success: success, failed: failure, error: error)
	}

</t:foreach>

<t:retain type="method"/>

<t:retain type="other"/>

}